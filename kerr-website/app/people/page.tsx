'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport PersonCard from '@/components/ui/PersonCard';\nimport AppWrapper from '../AppWrapper';\n\ninterface Person {\n  id: string;\n  firstName: string;\n  lastName: string;\n  middleName?: string;\n  maidenName?: string;\n  birthDate?: string;\n  deathDate?: string;\n  branch?: string;\n  generation?: number;\n  bio?: string;\n  photo?: string;\n}\n\nexport default function PeoplePage() {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [filter, setFilter] = useState('all');\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // Fetch people data\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/data/family.json');\n        const data = await response.json();\n        setPeople(data.people);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching people data:', err);\n        setError('Failed to load people data. Please try again later.');\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  // Filter people based on branch and search term\n  const filteredPeople = people.filter(person => {\n    // Branch filter\n    const branchMatch = filter === 'all' || person.branch === filter;\n    \n    // Search filter\n    const searchMatch = searchTerm === '' || \n      `${person.firstName} ${person.middleName || ''} ${person.lastName} ${person.maidenName || ''}`.toLowerCase().includes(searchTerm.toLowerCase());\n    \n    return branchMatch && searchMatch;\n  });\n\n  return (\n    <AppWrapper>\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold mb-2\">People of the Kerr Family</h1>\n          <p className=\"text-slate-600\">\n            Explore the individuals who make up the Kerr family across generations.\n          </p>\n        </div>\n        \n        {/* Filters and Search */}\n        <div className=\"mb-8 bg-white p-4 rounded-lg shadow\">\n          <div className=\"flex flex-col md:flex-row gap-4\">\n            <div className=\"flex-1\">\n              <label htmlFor=\"branch-filter\" className=\"block text-sm font-medium text-slate-700 mb-1\">\n                Filter by Branch\n              </label>\n              <select\n                id=\"branch-filter\"\n                value={filter}\n                onChange={(e) => setFilter(e.target.value)}\n                className=\"w-full p-2 border border-slate-300 rounded-md focus:outline-none focus:ring-2 focus:ring-slate-500\"\n              >\n                <option value=\"all\">All Branches</option>\n                <option value=\"core\">Core Family</option>\n                <option value=\"paternal\">Paternal Line</option>\n                <option value=\"maternal\">Maternal Line</option>\n                <option value=\"california\">California Branch</option>\n                <option value=\"louisiana\">Louisiana Branch</option>\n                <option value=\"extended\">Extended Family</option>\n              </select>\n            </div>\n            \n            <div className=\"flex-1\">\n              <label htmlFor=\"search\" className=\"block text-sm font-medium text-slate-700 mb-1\">\n                Search People\n              </label>\n              <input\n                type=\"text\"\n                id=\"search\"\n                placeholder=\"Search by name...\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                className=\"w-full p-2 border border-slate-300 rounded-md focus:outline-none focus:ring-2 focus:ring-slate-500\"\n              />\n            </div>\n          </div>\n        </div>\n        \n        {loading ? (\n          <div className=\"flex justify-center items-center h-64\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-slate-800\"></div>\n          </div>\n        ) : error ? (\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\" role=\"alert\">\n            <span className=\"block sm:inline\">{error}</span>\n          </div>\n        ) : filteredPeople.length === 0 ? (\n          <div className=\"bg-yellow-100 border border-yellow-400 text-yellow-700 px-4 py-3 rounded relative\" role=\"alert\">\n            <span className=\"block sm:inline\">No people found matching your filters.</span>\n          </div>\n        ) : (\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n            {filteredPeople.map((person) => (\n              <PersonCard \n                key={person.id}\n                id={person.id}\n                firstName={person.firstName}\n                lastName={person.lastName}\n                middleName={person.middleName}\n                birthDate={person.birthDate}\n                deathDate={person.deathDate}\n                photo={person.photo}\n                bio={person.bio}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    </AppWrapper>\n  );\n}